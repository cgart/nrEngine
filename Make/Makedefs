#-----------------------------------------------
# Find out the platform
#-----------------------------------------------
SHELL = /bin/sh
OS := $(shell uname)

## IRIX ?
ifeq ($(findstring IRIX,$(OS)),IRIX)
OS := IRIX
endif

## Make CYGWIN_XXXX CYGWIN so it's "Windows cross platform" :)
ifeq ($(findstring CYGWIN,$(OS)),CYGWIN)
OS := CYGWIN
endif

## Make MINGW_XXXX MINGW so it's "Windows cross platform" :)
ifeq ($(findstring MINGW,$(OS)),MINGW)
OS := MINGW
endif

#-----------------------------------------------
# Paths where to find includes and libraries
#-----------------------------------------------
TOPDIR ?= .
BUILDPATH = build
VPATH =. $(BUILDPATH)

prefix ?= /usr/local
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
incdir = $(exec_prefix)/include

INCPATH ?= -I$(prefix)/include -I/usr/local/include -I/usr/include
LIBPATH ?= -L$(prefix)/lib -L/usr/local/lib -L/usr/lib

INST_LOCATION = $(prefix)
INST_LOCATION_BIN = $(INST_LOCATION)/bin
INST_LOCATION_LIB = $(INST_LOCATION)/lib
INST_LOCATION_INC = $(INST_LOCATION)/include

#-----------------------------------------------
# Define macros with compiler options
#-----------------------------------------------
CC = g++
CFLAGS = -pthread -O2 -Wall -Werror $(INCPATH)
LIBS = 
LDFLAGS = -shared $(LIBPATH) $(LIBS)
DEPARG = -MM

INSTALL = install -c
INSTALL_INC = $(INSTALL) -m 644
INSTALL_BIN = $(INSTALL)
INSTALL_LIB = $(INSTALL)
INSTALL_DIR = $(INSTALL) -d
MKDIR = mkdir
MAKE = make

INSTALL_DIRS = $(INST_LOCATION_LIB) $(INST_LOCATION_INC)

#-----------------------------------------------
# Defining macros for building
#-----------------------------------------------
OBJECTS=$(CPPFILES:.cpp=.o)\
		$(CFILES:.c=.o)

DEPENDS=$(CPPFILES:.cpp=.d)\
		$(CFILES:.c=.cd)
		
		